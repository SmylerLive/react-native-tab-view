{"version":3,"sources":["TouchableItem.tsx"],"names":["React","TouchableNativeFeedback","TouchableOpacity","Platform","View","LOLLIPOP","TouchableItem","props","style","pressOpacity","pressColor","borderless","children","onPress","rest","OS","Version","Ripple","Children","only","Component","defaultProps"],"mappings":"yjBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OACEC,uBADF,CAEEC,gBAFF,CAGEC,QAHF,CAIEC,IAJF,KAQO,cARP,CAqBA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,C,GAEqBC,CAAAA,a,kSAKV,iBASH,KAAKC,KATF,CAELC,KAFK,aAELA,KAFK,CAGLC,YAHK,aAGLA,YAHK,CAILC,UAJK,aAILA,UAJK,CAKLC,UALK,aAKLA,UALK,CAMLC,QANK,aAMLA,QANK,CAOLC,OAPK,aAOLA,OAPK,CAQFC,IARE,+GAWP,GAAIX,QAAQ,CAACY,EAAT,GAAgB,SAAhB,EAA6BZ,QAAQ,CAACa,OAAT,EAAoBX,QAArD,CAA+D,CAC7D,MACE,qBAAC,uBAAD,aACMS,IADN,EAEE,OAAO,CAAED,OAFX,CAIE,WAAW,CAAEA,OAJf,CAKE,UAAU,CAAEZ,uBAAuB,CAACgB,MAAxB,CAA+BP,UAA/B,CAA2CC,UAA3C,CALd,kDAOE,oBAAC,IAAD,EAAM,KAAK,CAAEH,KAAb,iDAAqBR,KAAK,CAACkB,QAAN,CAAeC,IAAf,CAAoBP,QAApB,CAArB,CAPF,CADF,CAWD,CAZD,IAYO,CACL,MACE,qBAAC,gBAAD,aACME,IADN,EAEE,OAAO,CAAED,OAFX,CAIE,WAAW,CAAEA,OAJf,CAKE,KAAK,CAAEL,KALT,CAME,aAAa,CAAEC,YANjB,kDAQGG,QARH,CADF,CAYD,CACF,C,2BA1CwCZ,KAAK,CAACoB,S,EAA5Bd,a,CACZe,Y,CAAe,CACpBX,UAAU,CAAE,yBADQ,C,QADHJ,a","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n  StyleProp,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\n\ntype Props = ViewProps & {\n  onPress: () => void;\n  onLongPress?: () => void;\n  delayPressIn?: number;\n  borderless?: boolean;\n  pressColor: string;\n  pressOpacity?: number;\n  children?: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  render() {\n    const {\n      style,\n      pressOpacity,\n      pressColor,\n      borderless,\n      children,\n      onPress,\n      ...rest\n    } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          onPress={onPress}\n          // For an unknown reason onLongPress is call most of time when onPress should have\n          onLongPress={onPress}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>{React.Children.only(children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity\n          {...rest}\n          onPress={onPress}\n          // For an unknown reason onLongPress is call most of time when onPress should have\n          onLongPress={onPress}\n          style={style}\n          activeOpacity={pressOpacity}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]}